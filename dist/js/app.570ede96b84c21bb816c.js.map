{"version":3,"sources":["webpack://dice-poker-www/./src/history/index.js","webpack://dice-poker-www/./src/store/index.js","webpack://dice-poker-www/./src/components/Header.js","webpack://dice-poker-www/./src/components/FormCreateRoom.js","webpack://dice-poker-www/./src/components/HomePage.js","webpack://dice-poker-www/./src/components/Dice.js","webpack://dice-poker-www/./src/components/ClickableCell.js","webpack://dice-poker-www/./src/data/constants.js","webpack://dice-poker-www/./src/components/Table.js","webpack://dice-poker-www/./src/components/RoomPage.js","webpack://dice-poker-www/./src/components/ProfilePage.js","webpack://dice-poker-www/./src/components/NotFoundPage.js","webpack://dice-poker-www/./src/components/App.js","webpack://dice-poker-www/./src/index.js"],"names":["RouteStore","makeObservable","this","location","observable","_updateLocation","action","newState","state","history","push","replace","n","go","goBack","goForward","browserHistory","createBrowserHistory","basename","BASE_URL","routeStore","store","handleLocationChange","unsubscribeFromHistory","listen","subscribe","listener","unsubscribeFromStore","observe","rawLocation","unsubscribe","syncHistoryWithStore","console","log","reaction","pathname","makeAutoObservable","router","_socket","io","WS_URL","on","setCurrentRoom","setShotData","setTableData","user","setUserData","rooms","setRooms","room","table","data","shotData","setDiceSelectedState","comboData","hasData","obj","forEach","v","name","points","roomData","users","currentUserIndex","currentUser","id","userData","value","arguments","serial","tableData","emit","res","JSON","parse","ok","response","i","selected","observer","props","className","left","title","right","useState","setValue","onSubmit","event","preventDefault","type","placeholder","onChange","target","to","createRoom","key","onClick","length","maxUsers","finished","started","filled","IMGS","dice_1","dice_2","dice_3","dice_4","dice_5","dice_6","selectable","disabled","src","highlight","children","TABLE_FIELDS","ru","allCombos","map","tableColumn","isPlayingColumn","userName","slice","isMyShot","undefined","putPoint","index","exact","path","stores","render","document","getElementById"],"mappings":"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","file":"js/app.570ede96b84c21bb816c.js","sourcesContent":["import { createBrowserHistory } from 'history'\r\nimport { observable, reaction, makeAutoObservable, makeObservable, autorun, action } from 'mobx'\r\n\r\nclass RouteStore {\r\n  history\r\n  location\r\n  \r\n  constructor () {\r\n    makeObservable(this, {\r\n      location: observable,\r\n      _updateLocation: action\r\n    })\r\n  }\r\n\r\n  _updateLocation (newState) {\r\n    this.location = newState\r\n  }\r\n  \r\n  push (location, state) {\r\n    this.history.push(location, state)\r\n  }\r\n  replace (location, state) {\r\n    this.history.replace(location, state)\r\n  }\r\n  go (n) {\r\n    this.history.go(n)\r\n  }\r\n  back () {\r\n    this.history.goBack()\r\n  }\r\n  forward () {\r\n    this.history.goForward()\r\n  }\r\n}\r\n\r\nfunction syncHistoryWithStore (history, store) {\r\n  // Initialise store\r\n  store.history = history\r\n\r\n  // Handle update from history object\r\n  const handleLocationChange = (location) => {\r\n    store._updateLocation(location)\r\n  }\r\n\r\n  const unsubscribeFromHistory = history.listen(handleLocationChange)\r\n  handleLocationChange(history.location)\r\n\r\n  const subscribe = (listener) => {\r\n    const onStoreChange = () => {\r\n      const rawLocation = { ...store.location }\r\n      listener(rawLocation, history.action)\r\n    }\r\n\r\n    // Listen for changes to location state in store\r\n    const unsubscribeFromStore = observe(store, 'location', onStoreChange)\r\n\r\n    listener(store.location, history.action)\r\n\r\n    return unsubscribeFromStore\r\n  }\r\n\r\n  history.subscribe = subscribe\r\n  history.unsubscribe = unsubscribeFromHistory\r\n\r\n  return history\r\n}\r\n\r\nconst browserHistory = createBrowserHistory({\r\n  basename: BASE_URL\r\n})\r\n\r\nexport const routeStore = new RouteStore(browserHistory)\r\n\r\nconst history = syncHistoryWithStore(browserHistory, routeStore)\r\n\r\nconsole.log('routeStore:', routeStore)\r\nconsole.log('history:', history)\r\n\r\n// autorun(() => {\r\n//   console.log('current pathname:', routeStore.location.pathname);\r\n// })\r\n\r\nreaction(\r\n  () => routeStore.location.pathname,\r\n  (pathname) => {\r\n    console.log('current pathname:', pathname);\r\n  }\r\n)\r\n\r\nexport default history","import { makeAutoObservable, makeObservable, observable, action, computed, runInAction } from 'mobx'\r\nimport io from 'socket.io-client'\r\n\r\nimport { routeStore } from '../history'\r\n\r\nclass Store {\r\n  _socket\r\n  router\r\n  rooms = []\r\n  userData = {}\r\n  roomData\r\n  shotData\r\n  comboData\r\n  tableData\r\n  serial = 0\r\n\r\n  get hasData () {\r\n    return this.shotData && this.comboData\r\n  }\r\n\r\n  get allCombos () {\r\n    if (!this.hasData) return {}\r\n    let obj = {}\r\n    this.comboData.forEach(v => {\r\n      obj[v.name] = v.points\r\n    })\r\n    return obj\r\n  }\r\n\r\n  get currentUser () {\r\n    return this.roomData && this.roomData.users[this.roomData.currentUserIndex]\r\n  }\r\n\r\n  get isMyShot () {\r\n    return this.currentUser && this.currentUser.id === this.userData.id\r\n  }\r\n\r\n  constructor (routeStore) {\r\n    // makeObservable(this, {\r\n    //   rooms: observable,\r\n    //   shotData: observable,\r\n    //   comboData: observable,\r\n    //   serial: observable,\r\n    //   tableData: observable,\r\n    //   setRooms: action,\r\n    //   createRoom: action,\r\n    //   setShotData: action,\r\n    //   toggleHoldDice: action,\r\n    //   setDiceSelectedState: action,\r\n    //   setTableData: action,\r\n    //   hasData: computed,\r\n    //   allCombos: computed,\r\n    // })\r\n    makeAutoObservable(this)\r\n\r\n    this.router = routeStore\r\n\r\n    this._socket = io(WS_URL)\r\n    this._socket.on('connect', () => {\r\n      console.log('[socket:on:connect]')\r\n    })\r\n    this._socket.on('disconnect', () => {\r\n      console.log('[socket:on:disconnect]')\r\n      this.router.replace('/')\r\n      this.setCurrentRoom(null)\r\n      this.setShotData(null)\r\n      this.setTableData(null)\r\n    })\r\n    \r\n    this._socket.on('get user', (user) => {\r\n      console.log('[socket:on:get user]', user)\r\n      this.setUserData(user)\r\n    })\r\n    this._socket.on('get rooms', (rooms) => {\r\n      console.log('[socket:on:get rooms]', rooms)\r\n      this.setRooms(rooms)\r\n    })\r\n    this._socket.on('started', (room, table) => {\r\n      console.log('[socket:on:started]', room, table)\r\n      this.setCurrentRoom(room)\r\n      this.setTableData(table)\r\n    })\r\n    this._socket.on('made shot', (data) => {\r\n      console.log('[socket:on:made shot]', data)\r\n      this.setShotData(data)\r\n    })\r\n    this._socket.on('selected dice', (shotData) => {\r\n      console.log('[socket:on:selected dice]', shotData)\r\n      this.setDiceSelectedState(shotData)\r\n    })\r\n    this._socket.on('put point', (table) => {\r\n      console.log('[socket:on:put point]', table)\r\n      this.setTableData(table)\r\n      this.setShotData(null)\r\n    })\r\n\r\n    this._socket.on('joined room', (room) => {\r\n      console.log('[socket:on:joined room]', room)\r\n      this.setCurrentRoom(room)\r\n    })\r\n    this._socket.on('left room', (room) => {\r\n      console.log('[socket:on:left room]', room)\r\n      this.setCurrentRoom(room)\r\n    })\r\n    this._socket.on('end', (room, table) => {\r\n      console.log('[socket:on:end]', table)\r\n      this.setCurrentRoom(room)\r\n      this.setTableData(table)\r\n    })\r\n    this._socket.on('update room', (room) => {\r\n      console.log('[socket:on:update room]', room)\r\n      this.setCurrentRoom(room)\r\n    })\r\n  }\r\n\r\n  setUserData (value) {\r\n    console.log('setUserData', ...arguments)\r\n    this.userData = value || {}\r\n  }\r\n\r\n  setRooms (value) {\r\n    console.log('setRooms', ...arguments)\r\n    this.rooms = value || []\r\n  }\r\n\r\n  setCurrentRoom (value) {\r\n    console.log('setCurrentRoom', ...arguments)\r\n    this.roomData = value\r\n  }\r\n\r\n  setShotData (data) {\r\n    console.log('setShotData', ...arguments)\r\n    this.shotData = data && data.shotData || null\r\n    this.comboData = data && data.comboData || null\r\n    this.serial = data && data.serial || 0\r\n  }\r\n\r\n  setTableData (data) {\r\n    console.log('setTableData', ...arguments)\r\n    this.tableData = data\r\n  }\r\n\r\n  setDiceSelectedState (data) {\r\n    console.log('setDiceSelectedState', ...arguments)\r\n    this.shotData = data\r\n  }\r\n\r\n  createRoom (name) {\r\n    console.log('createRoom', ...arguments)\r\n    this._socket.emit('create room', name, (res) => {\r\n      let { ok, data } = JSON.parse(res)\r\n      console.log('[socket:emit:create room]', data)\r\n    })\r\n  }\r\n\r\n  joinRoom (id) {\r\n    console.log('joinRoom', ...arguments)\r\n    this._socket.emit('join room', id, (res) => {\r\n      let response = JSON.parse(res)\r\n      console.log('[socket:emit:join room]', response)\r\n      if (response.ok) {\r\n        this.setCurrentRoom(response.data)\r\n        this.router.push(`/room/${response.data.id}`)\r\n      }\r\n    })\r\n  }\r\n\r\n  leaveRoom () {\r\n    console.log('leaveRoom')\r\n    this._socket.emit('leave room', (res) => {\r\n      let { ok } = JSON.parse(res)\r\n      console.log('[socket:emit:leave room]', ok)\r\n      if (ok) {\r\n        this.router.replace('/')\r\n        this.setCurrentRoom(null)\r\n        this.setShotData(null)\r\n        this.setTableData(null)\r\n      }\r\n    })\r\n  }\r\n\r\n  startGame () {\r\n    console.log('startGame')\r\n    this._socket.emit('start', (res) => {\r\n      let { ok } = JSON.parse(res)\r\n      console.log('[socket:emit:start]', ok)\r\n    })\r\n  }\r\n\r\n  makeShot () {\r\n    console.log('makeShot')\r\n    this._socket.emit('make shot', (res) => {\r\n      let response = JSON.parse(res)\r\n      console.log('[socket:emit:make shot]', response)\r\n    })\r\n  }\r\n  \r\n  toggleHoldDice (i) {\r\n    if (this.serial < 3) {\r\n      this.shotData[i].selected = !this.shotData[i].selected\r\n      this._socket.emit('select dice', this.shotData, (res) => {\r\n        let response = JSON.parse(res)\r\n        console.log('[socket:emit:select dice]', response)\r\n      })\r\n    }\r\n  }\r\n\r\n  putPoint (name) {\r\n    console.log('putPoint', ...arguments)\r\n    this._socket.emit('put point', name, (res) => {\r\n      let response = JSON.parse(res)\r\n      console.log('[socket:emit:put point]', response)\r\n    })\r\n  }\r\n}\r\n\r\nconst store = new Store(routeStore)\r\n\r\nexport default store","import { observer } from 'mobx-react'\r\nimport React, { useState } from 'react'\r\n\r\nconst Header = observer((props) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__left\">{props.left}</div>\r\n      <div className=\"header__title\">{props.title}</div>\r\n      <div className=\"header__right\">{props.right}</div>\r\n    </header>\r\n  )\r\n})\r\n\r\nexport default Header","import { observer } from 'mobx-react'\r\nimport React, { useState } from 'react'\r\n\r\nimport store from '../store'\r\n\r\nconst FormCreateRoom = observer(() => {\r\n  const [value, setValue] = useState('')\r\n\r\n  let handleSubmit = (event) => {\r\n    store.createRoom(value)\r\n    setValue('')\r\n    event.preventDefault()\r\n  }\r\n  let handleChange = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <form className=\"form-create-room\" onSubmit={handleSubmit}>\r\n      <div className=\"input\">\r\n        <div className=\"input-label\">Название комнаты</div>\r\n        <input className=\"input-native\" type=\"text\" placeholder=\"Введите название\" value={value} onChange={handleChange} />\r\n      </div>\r\n      <button className=\"button button--primary\" type=\"submit\">Создать комнату</button>\r\n    </form>\r\n  )\r\n})\r\n\r\nexport default FormCreateRoom","import React from 'react'\r\nimport { observer } from \"mobx-react\"\r\n\r\nimport {\r\n  Link\r\n} from \"react-router-dom\"\r\n\r\nimport store from '../store'\r\n\r\nimport Header from './Header'\r\nimport FormCreateRoom from './FormCreateRoom'\r\n\r\nconst HomePage = observer(() => {\r\n\r\n  let getStatus = (room) => {\r\n    if (room.finished) return 'закончилась'\r\n    else if (room.started) return 'началась'\r\n    else if (room.filled) return 'заполнена'\r\n    else return 'ожидает игроков'\r\n  }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <Header\r\n        title=\"Dice Poker\"\r\n        right={<Link to=\"/profile\" className=\"button button--flat\">Профиль: {store.userData.name}</Link>} />\r\n\r\n      <main className=\"main\">\r\n        <FormCreateRoom createRoom={store.createRoom} />\r\n        {\r\n          store.rooms.length > 0 && <div className=\"block\">\r\n            <div className=\"room-list\">\r\n              {\r\n                store.rooms.map(v => (\r\n                  <div className=\"room-list-item\" key={v.id} onClick={() => store.joinRoom(v.id)}>\r\n                    <div className=\"room-list-item__meta\">Название: <b>{v.name}</b></div>\r\n                    <div className=\"room-list-item__meta\">Игроков: <b>{v.users.length}/{v.maxUsers}</b></div>\r\n                    <div className=\"room-list-item__meta\">Статус: <b>{getStatus(v)}</b></div>\r\n                  </div>\r\n                ))\r\n              }\r\n            </div>\r\n          </div>\r\n        }\r\n      </main>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default HomePage","import React from 'react'\r\n\r\nimport dice_1 from '../assets/img/dice_1.svg'\r\nimport dice_2 from '../assets/img/dice_2.svg'\r\nimport dice_3 from '../assets/img/dice_3.svg'\r\nimport dice_4 from '../assets/img/dice_4.svg'\r\nimport dice_5 from '../assets/img/dice_5.svg'\r\nimport dice_6 from '../assets/img/dice_6.svg'\r\n\r\nconst IMGS = {\r\n  dice_1,\r\n  dice_2,\r\n  dice_3,\r\n  dice_4,\r\n  dice_5,\r\n  dice_6\r\n}\r\n\r\nfunction Dice (props) {\r\n  return (\r\n    <button className={'dice' + (props.selected ? ' selected' : '') + (props.selectable ? ' selectable' : '')} onClick={props.onClick} disabled={!props.selectable}>\r\n      <img src={IMGS[`dice_${props.value}`]} />\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Dice","import React from 'react'\r\n\r\nfunction ClickableCell (props) {\r\n  return (\r\n    <button className={'clickable-cell' + (props.highlight ? ' is-highlight' : '')} disabled={props.disabled} onClick={props.onClick}>{ props.children }</button>\r\n  )\r\n}\r\n\r\nexport default ClickableCell","export const TABLE_FIELDS = [\r\n  {\r\n    name: 'school_1',\r\n    ru: '1'\r\n  },\r\n  {\r\n    name: 'school_2',\r\n    ru: '2'\r\n  },\r\n  {\r\n    name: 'school_3',\r\n    ru: '3'\r\n  },\r\n  {\r\n    name: 'school_4',\r\n    ru: '4'\r\n  },\r\n  {\r\n    name: 'school_5',\r\n    ru: '5'\r\n  },\r\n  {\r\n    name: 'school_6',\r\n    ru: '6'\r\n  },\r\n  {\r\n    name: 'school_sum',\r\n    ru: '∑'\r\n  },\r\n  {\r\n    name: 'one_pair',\r\n    ru: '2'\r\n  },\r\n  {\r\n    name: 'set',\r\n    ru: '3'\r\n  },\r\n  {\r\n    name: 'two_pairs',\r\n    ru: '2+2'\r\n  },\r\n  {\r\n    name: 'full_house',\r\n    ru: '3+2'\r\n  },\r\n  {\r\n    name: 'small_straight',\r\n    ru: 'М.С.'\r\n  },\r\n  {\r\n    name: 'big_straight',\r\n    ru: 'Б.С.'\r\n  },\r\n  {\r\n    name: 'quads',\r\n    ru: 'Каре'\r\n  },\r\n  {\r\n    name: 'poker',\r\n    ru: 'Покер'\r\n  },\r\n  {\r\n    name: 'sum',\r\n    ru: '∑ общ'\r\n  },\r\n  {\r\n    name: 'total',\r\n    ru: 'Итог'\r\n  }\r\n]","import React from 'react'\r\nimport { observer } from \"mobx-react\"\r\n\r\nimport ClickableCell from './ClickableCell'\r\n\r\nimport { TABLE_FIELDS } from '../data/constants'\r\n\r\nconst Table = observer(({ store }) => {\r\n  console.log(store.allCombos)\r\n  return (\r\n    <div className=\"game-table\">\r\n      <div className=\"col\">\r\n        <div className=\"cell\"></div>\r\n        {\r\n          TABLE_FIELDS.map(v => (\r\n            <div className=\"cell bold\" key={v.name}>{ v.ru }</div>\r\n          ))\r\n        }\r\n      </div>\r\n      {\r\n        store.tableData.map(tableColumn => {\r\n          let isPlayingColumn = store.currentUser.name == tableColumn.userName\r\n          return (\r\n            <div className=\"col\" key={tableColumn.userName}>\r\n              <div className=\"cell bold\">{tableColumn.userName.slice(0, 2)}</div>\r\n              {\r\n                TABLE_FIELDS.map(v => {\r\n                  let highlight = store.isMyShot && isPlayingColumn && tableColumn.table.points[v.name] === null && store.allCombos[v.name] !== undefined\r\n                  let disabled = !store.isMyShot || !isPlayingColumn || v.name == 'school_sum' || v.name == 'total' || tableColumn.table.points[v.name] !== null\r\n                  let value = ''\r\n                  if (isPlayingColumn) {\r\n                    if (tableColumn.table.points[v.name] !== null) value = tableColumn.table.points[v.name]\r\n                    else if (store.allCombos[v.name] !== null) value = store.allCombos[v.name]\r\n                  } else {\r\n                    if (tableColumn.table.points[v.name] !== null) value = tableColumn.table.points[v.name]\r\n                  }\r\n                  // console.log('cell:', isPlayingColumn, store.isMyShot, disabled, value);\r\n                  return (\r\n                    <ClickableCell\r\n                      key={v.name}\r\n                      highlight={highlight}\r\n                      disabled={disabled}\r\n                      onClick={() => { store.putPoint(v.name) }}>\r\n                        { value }\r\n                    </ClickableCell>\r\n                  )\r\n                })\r\n              }\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Table","import React from 'react'\r\nimport { observer } from \"mobx-react\"\r\n\r\nimport store from '../store'\r\n\r\nimport Header from './Header'\r\nimport Dice from './Dice'\r\nimport Table from './Table'\r\n\r\nconst RoomPage = observer(() => {\r\n  return store.roomData && (\r\n    <div className=\"page\">\r\n      <Header\r\n        left={<button className=\"button button--flat\" onClick={() => store.leaveRoom()}>Покинуть комнату</button>}\r\n        title=\"Игра\"\r\n        right={store.userData.name} />\r\n\r\n      <main className=\"main\">\r\n        <div className=\"room-info-container\">\r\n          <div className=\"list\">\r\n            <div className=\"item\">\r\n              <span>Название комнаты: <b>{store.roomData.name}</b></span>\r\n            </div>\r\n            <div className=\"item\">\r\n              <span>Игроки ({store.roomData.users.length}): <b>{\r\n                store.roomData.users.map((v, i) => (\r\n                  <span key={v.id}>{v.name + (i < store.roomData.users.length - 1 ? ', ' : '')}</span>\r\n                ))\r\n              }</b></span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {\r\n          !store.roomData.started \r\n          ? <button className=\"button button--primary button--block\" onClick={() => store.startGame()}>Начать игру</button>\r\n          : <div className=\"game-container\">\r\n            <div className=\"board-container\">\r\n              <div className=\"board-container__wrap\">\r\n                {\r\n                  store.roomData.finished\r\n                  ? <span className=\"board-container__text\">Игра окончена, победитель: <b className=\"c-primary\">{store.roomData.users.find(v => v.id == store.roomData.winnerUserId).name}</b></span>\r\n                  : store.isMyShot\r\n                  ? <span className=\"board-container__text c-primary\">Ваш ход</span>\r\n                  : <span className=\"board-container__text\">Бросает {store.currentUser ? <b>{store.currentUser.name}</b> : ''}</span>\r\n                }\r\n              </div>\r\n            </div>\r\n            {\r\n              !store.roomData.finished && <div className=\"shot-container\">\r\n                <div className=\"shot-title\">Бросок: <b>{store.serial}</b></div>\r\n                {\r\n                  store.isMyShot && <button className=\"button button--flat\" onClick={() => store.makeShot()} disabled={store.serial === 3}>{\r\n                    !store.shotData || store.shotData.filter(v => v.selected).length > 0 ? 'Сделать бросок' : 'Перебросить всё'\r\n                  }</button>\r\n                }\r\n              </div>\r\n            }\r\n            {\r\n              store.hasData && !store.roomData.finished && <div className=\"dice-container\">\r\n                <div className=\"dice-container__title\">Бросок</div>\r\n                <div className=\"dice-container__block\">\r\n                  {\r\n                    store.shotData.filter(v => !v.selected).map(v => (\r\n                      <Dice key={v.index} value={v.value} selectable={store.isMyShot && store.serial !== 3} onClick={() => store.toggleHoldDice(v.index)} />\r\n                    ))\r\n                  }\r\n                </div>\r\n                <div className=\"dice-container__title\">Переброс</div>\r\n                <div className=\"dice-container__block\">\r\n                  {\r\n                    store.shotData.filter(v => v.selected).map(v => (\r\n                      <Dice key={v.index} value={v.value} selectable={store.isMyShot && store.serial !== 3} onClick={() => store.toggleHoldDice(v.index)} />\r\n                    ))\r\n                  }\r\n                </div>\r\n              </div>\r\n            }\r\n            { store.tableData && <Table store={store} /> }\r\n          </div>\r\n        }\r\n      </main>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default RoomPage","import React from 'react'\r\nimport { observer } from \"mobx-react\"\r\n\r\nimport {\r\n  Link\r\n} from \"react-router-dom\"\r\n\r\nimport Header from './Header'\r\n\r\nconst ProfilePage = observer(() => {\r\n  return (\r\n    <div className=\"page\">\r\n      <Header\r\n        left={<Link to=\"/\" exact className=\"button button--flat\">Назад</Link>}\r\n        title=\"Профиль\" />\r\n      \r\n      <main className=\"main\">\r\n        \r\n      </main>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default ProfilePage","import React from 'react'\r\nimport { observer } from \"mobx-react\"\r\n\r\nconst NotFoundPage = observer(() => \r\n  (\r\n    <div className=\"page\">\r\n      <header className=\"header\"></header>\r\n      <main className=\"main\">\r\n        Страница не найдена\r\n      </main>\r\n    </div>\r\n  )\r\n)\r\n\r\nexport default NotFoundPage","// import { hot } from 'react-hot-loader/root'\r\nimport React from 'react'\r\nimport { observer } from \"mobx-react\"\r\nimport { Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport history from '../history'\r\n\r\nimport HomePage from './HomePage'\r\nimport RoomPage from './RoomPage'\r\nimport ProfilePage from './ProfilePage'\r\nimport NotFoundPage from './NotFoundPage'\r\n\r\nconst App = observer(props => {\r\n  return (\r\n    <Router history={history} >\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <HomePage store={props.store} />\r\n        </Route>\r\n\r\n        <Route path=\"/profile\">\r\n          <ProfilePage store={props.store} />\r\n        </Route>\r\n\r\n        <Route path=\"/room/:id\">\r\n          <RoomPage store={props.store} />\r\n        </Route>\r\n\r\n        <Route path=\"*\">\r\n          <NotFoundPage />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n})\r\n\r\n// const App = observer(({ store }) => {\r\n//   return (\r\n//     <Switch>\r\n//       <Route path=\"/profile\" render={() => <ProfilePage />} />\r\n//       <Route path=\"/room/:id\" render={() => <RoomPage />} />\r\n//       <Route path=\"/\" render={() => <HomePage />} />\r\n//     </Switch>\r\n//   )\r\n// })\r\n\r\n// function App () {\r\n//   return (\r\n//     <Router history={history}>\r\n//       <Switch>\r\n//         <Route path=\"/profile\">\r\n//           <ProfilePage />\r\n//         </Route>\r\n//         <Route path=\"/room/:id\">\r\n//           <RoomPage />\r\n//         </Route>\r\n//         <Route path=\"/\">\r\n//           <HomePage />\r\n//         </Route>\r\n//       </Switch>\r\n//     </Router>\r\n//   )\r\n// }\r\n\r\nexport default App","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport App from './components/App'\r\nimport store from './store'\r\n\r\nimport { routeStore } from './history'\r\n\r\nlet stores = { store, routeStore }\r\n\r\nimport './scss/index.scss'\r\n\r\nrender(<App {...stores} />, document.getElementById('root'))"],"sourceRoot":""}