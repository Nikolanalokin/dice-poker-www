{"version":3,"sources":["webpack://dice-poker-www/./src/history/index.js","webpack://dice-poker-www/./src/services/socket.js","webpack://dice-poker-www/./src/store/gameStore.js","webpack://dice-poker-www/./src/store/userStore.js","webpack://dice-poker-www/./src/store/chatStore.js","webpack://dice-poker-www/./src/store/index.js","webpack://dice-poker-www/./src/components/layout/Header.js","webpack://dice-poker-www/./src/components/forms/FormCreateRoom.js","webpack://dice-poker-www/./src/components/pages/HomePage.js","webpack://dice-poker-www/./src/components/dice/Dice.js","webpack://dice-poker-www/./src/components/game-table/ClickableCell.js","webpack://dice-poker-www/./src/data/constants.js","webpack://dice-poker-www/./src/components/game-table/Table.js","webpack://dice-poker-www/./src/components/chat/ChatMessage.js","webpack://dice-poker-www/./src/components/chat/FormChatInputMessage.js","webpack://dice-poker-www/./src/components/chat/Chat.js","webpack://dice-poker-www/./src/components/pages/RoomPage.js","webpack://dice-poker-www/./src/components/pages/ProfilePage.js","webpack://dice-poker-www/./src/components/pages/NotFoundPage.js","webpack://dice-poker-www/./src/components/App.js","webpack://dice-poker-www/./src/index.js"],"names":["RouteStore","makeObservable","this","location","observable","_updateLocation","action","newState","state","history","push","replace","n","go","goBack","goForward","browserHistory","createBrowserHistory","basename","BASE_URL","routeStore","store","handleLocationChange","unsubscribeFromHistory","listen","subscribe","listener","unsubscribeFromStore","observe","rawLocation","unsubscribe","syncHistoryWithStore","console","log","reaction","pathname","socket","io","WS_URL","on","GameStore","rootStore","undefined","makeAutoObservable","clearGame","rooms","setRooms","room","table","setCurrentRoom","setTableData","data","setShotData","shotData","setDiceSelectedState","comboData","hasData","obj","forEach","v","name","points","roomData","users","currentUserIndex","currentUser","id","userStore","user","value","arguments","serial","tableData","res","JSON","parse","ok","response","chatStore","clearMessages","i","selected","UserStore","setUser","ChatStore","addMessage","text","sender","message","messages","gameStore","observer","props","className","left","title","right","useState","setValue","onSubmit","event","preventDefault","type","placeholder","onChange","target","to","createRoom","length","map","key","onClick","joinRoom","maxUsers","finished","started","filled","IMGS","dice_1","dice_2","dice_3","dice_4","dice_5","dice_6","selectable","disabled","src","highlight","children","TABLE_FIELDS","ru","allCombos","tableColumn","isPlayingColumn","userName","slice","isMyShot","leaveRoom","find","winnerUserId","makeShot","filter","index","toggleHoldDice","startGame","exact","path","render","document","getElementById"],"mappings":"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","file":"js/app.92a7b7a76f9db6e8f5f1.js","sourcesContent":["import { createBrowserHistory } from 'history'\r\nimport { observable, reaction, makeAutoObservable, makeObservable, autorun, action } from 'mobx'\r\n\r\nclass RouteStore {\r\n  history\r\n  location\r\n  \r\n  constructor () {\r\n    makeObservable(this, {\r\n      location: observable,\r\n      _updateLocation: action\r\n    })\r\n  }\r\n\r\n  _updateLocation (newState) {\r\n    this.location = newState\r\n  }\r\n  \r\n  push (location, state) {\r\n    this.history.push(location, state)\r\n  }\r\n  replace (location, state) {\r\n    this.history.replace(location, state)\r\n  }\r\n  go (n) {\r\n    this.history.go(n)\r\n  }\r\n  back () {\r\n    this.history.goBack()\r\n  }\r\n  forward () {\r\n    this.history.goForward()\r\n  }\r\n}\r\n\r\nfunction syncHistoryWithStore (history, store) {\r\n  // Initialise store\r\n  store.history = history\r\n\r\n  // Handle update from history object\r\n  const handleLocationChange = (location) => {\r\n    store._updateLocation(location)\r\n  }\r\n\r\n  const unsubscribeFromHistory = history.listen(handleLocationChange)\r\n  handleLocationChange(history.location)\r\n\r\n  const subscribe = (listener) => {\r\n    const onStoreChange = () => {\r\n      const rawLocation = { ...store.location }\r\n      listener(rawLocation, history.action)\r\n    }\r\n\r\n    // Listen for changes to location state in store\r\n    const unsubscribeFromStore = observe(store, 'location', onStoreChange)\r\n\r\n    listener(store.location, history.action)\r\n\r\n    return unsubscribeFromStore\r\n  }\r\n\r\n  history.subscribe = subscribe\r\n  history.unsubscribe = unsubscribeFromHistory\r\n\r\n  return history\r\n}\r\n\r\nconst browserHistory = createBrowserHistory({\r\n  basename: BASE_URL\r\n})\r\n\r\nexport const routeStore = new RouteStore(browserHistory)\r\n\r\nconst history = syncHistoryWithStore(browserHistory, routeStore)\r\n\r\nconsole.log('routeStore:', routeStore)\r\nconsole.log('history:', history)\r\n\r\n// autorun(() => {\r\n//   console.log('current pathname:', routeStore.location.pathname);\r\n// })\r\n\r\nreaction(\r\n  () => routeStore.location.pathname,\r\n  (pathname) => {\r\n    console.log('current pathname:', pathname);\r\n  }\r\n)\r\n\r\nexport default history","import io from 'socket.io-client'\r\n\r\nconst socket = io(PRODUCTION ? WS_URL : 'localhost:3000')\r\n\r\nsocket.on('connect', () => {\r\n  console.log('[socket:on:connect]')\r\n})\r\n\r\nexport default socket","import { makeAutoObservable, makeObservable, observable, action, computed, runInAction } from 'mobx'\r\n\r\nimport socket from '../services/socket'\r\n\r\nexport default class GameStore {\r\n  rootStore = undefined\r\n  rooms = []\r\n  userData = {}\r\n  roomData\r\n  shotData\r\n  comboData\r\n  tableData\r\n  serial = 0\r\n\r\n  get hasData () {\r\n    return this.shotData && this.comboData\r\n  }\r\n\r\n  get allCombos () {\r\n    if (!this.hasData) return {}\r\n    let obj = {}\r\n    this.comboData.forEach(v => {\r\n      obj[v.name] = v.points\r\n    })\r\n    return obj\r\n  }\r\n\r\n  get currentUser () {\r\n    return this.roomData && this.roomData.users[this.roomData.currentUserIndex]\r\n  }\r\n\r\n  get isMyShot () {\r\n    return this.currentUser && this.currentUser.id === this.rootStore.userStore.user.id\r\n  }\r\n\r\n  constructor (rootStore) {\r\n    makeAutoObservable(this, { rootStore: false })\r\n\r\n    this.rootStore = rootStore\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('[socket:on:disconnect]')\r\n      this.rootStore.routeStore.replace('/')\r\n      this.clearGame()\r\n    })\r\n    \r\n    socket.on('get rooms', (rooms) => {\r\n      console.log('[socket:on:get rooms]', rooms)\r\n      this.setRooms(rooms)\r\n    })\r\n    socket.on('started', (room, table) => {\r\n      console.log('[socket:on:started]', room, table)\r\n      this.setCurrentRoom(room)\r\n      this.setTableData(table)\r\n    })\r\n    socket.on('made shot', (data) => {\r\n      console.log('[socket:on:made shot]', data)\r\n      this.setShotData(data)\r\n    })\r\n    socket.on('selected dice', (shotData) => {\r\n      console.log('[socket:on:selected dice]', shotData)\r\n      this.setDiceSelectedState(shotData)\r\n    })\r\n    socket.on('put point', (table) => {\r\n      console.log('[socket:on:put point]', table)\r\n      this.setTableData(table)\r\n      this.setShotData(null)\r\n    })\r\n\r\n    socket.on('joined room', (room) => {\r\n      console.log('[socket:on:joined room]', room)\r\n      this.setCurrentRoom(room)\r\n    })\r\n    socket.on('left room', (room) => {\r\n      console.log('[socket:on:left room]', room)\r\n      this.setCurrentRoom(room)\r\n    })\r\n    socket.on('end', (room, table) => {\r\n      console.log('[socket:on:end]', table)\r\n      this.setCurrentRoom(room)\r\n      this.setTableData(table)\r\n    })\r\n    socket.on('update room', (room) => {\r\n      console.log('[socket:on:update room]', room)\r\n      this.setCurrentRoom(room)\r\n    })\r\n  }\r\n\r\n  setRooms (value) {\r\n    console.log('setRooms', ...arguments)\r\n    this.rooms = value || []\r\n  }\r\n\r\n  setCurrentRoom (value) {\r\n    console.log('setCurrentRoom', ...arguments)\r\n    this.roomData = value\r\n  }\r\n\r\n  setShotData (data) {\r\n    console.log('setShotData', ...arguments)\r\n    this.shotData = data && data.shotData || null\r\n    this.comboData = data && data.comboData || null\r\n    this.serial = data && data.serial || 0\r\n  }\r\n\r\n  setTableData (data) {\r\n    console.log('setTableData', ...arguments)\r\n    this.tableData = data\r\n  }\r\n\r\n  setDiceSelectedState (data) {\r\n    console.log('setDiceSelectedState', ...arguments)\r\n    this.shotData = data\r\n  }\r\n\r\n  createRoom (name) {\r\n    console.log('createRoom', ...arguments)\r\n    socket.emit('create room', name, (res) => {\r\n      let { ok, data } = JSON.parse(res)\r\n      console.log('[socket:emit:create room]', data)\r\n    })\r\n  }\r\n\r\n  joinRoom (id) {\r\n    console.log('joinRoom', ...arguments)\r\n    socket.emit('join room', id, (res) => {\r\n      let response = JSON.parse(res)\r\n      console.log('[socket:emit:join room]', response)\r\n      if (response.ok) {\r\n        this.setCurrentRoom(response.data)\r\n        this.rootStore.routeStore.push(`/room/${response.data.id}`)\r\n      }\r\n    })\r\n  }\r\n\r\n  leaveRoom () {\r\n    console.log('leaveRoom')\r\n    socket.emit('leave room', (res) => {\r\n      let { ok } = JSON.parse(res)\r\n      console.log('[socket:emit:leave room]', ok)\r\n      if (ok) {\r\n        this.rootStore.routeStore.replace('/')\r\n        this.clearGame()\r\n      }\r\n    })\r\n  }\r\n\r\n  clearGame () {\r\n    this.setCurrentRoom(null)\r\n    this.setShotData(null)\r\n    this.setTableData(null)\r\n    this.rootStore.chatStore.clearMessages(null)\r\n  }\r\n\r\n  startGame () {\r\n    console.log('startGame')\r\n    socket.emit('start', (res) => {\r\n      let { ok } = JSON.parse(res)\r\n      console.log('[socket:emit:start]', ok)\r\n    })\r\n  }\r\n\r\n  makeShot () {\r\n    console.log('makeShot')\r\n    socket.emit('make shot', (res) => {\r\n      let response = JSON.parse(res)\r\n      console.log('[socket:emit:make shot]', response)\r\n    })\r\n  }\r\n  \r\n  toggleHoldDice (i) {\r\n    if (this.serial < 3) {\r\n      this.shotData[i].selected = !this.shotData[i].selected\r\n      socket.emit('select dice', this.shotData, (res) => {\r\n        let response = JSON.parse(res)\r\n        console.log('[socket:emit:select dice]', response)\r\n      })\r\n    }\r\n  }\r\n\r\n  putPoint (name) {\r\n    console.log('putPoint', ...arguments)\r\n    socket.emit('put point', name, (res) => {\r\n      let response = JSON.parse(res)\r\n      console.log('[socket:emit:put point]', response)\r\n    })\r\n  }\r\n}","import { makeAutoObservable, runInAction } from 'mobx'\r\n\r\nimport socket from '../services/socket'\r\n\r\nexport default class UserStore {\r\n  rootStore = undefined\r\n  user = {}\r\n\r\n  constructor (rootStore) {\r\n    makeAutoObservable(this, { rootStore: false })\r\n\r\n    this.rootStore = rootStore\r\n\r\n    socket.on('get user', (data) => {\r\n      console.log('[socket:on:get user]', data)\r\n      this.setUser(data)\r\n    })\r\n  }\r\n\r\n  setUser (value) {\r\n    console.log('setUserData', ...arguments)\r\n    this.user = value || {}\r\n  }\r\n}","import { makeAutoObservable, runInAction } from 'mobx'\r\n\r\nimport socket from '../services/socket'\r\n\r\nexport default class ChatStore {\r\n  rootStore = undefined\r\n  messages = []\r\n\r\n  constructor (rootStore) {\r\n    makeAutoObservable(this, { rootStore: false })\r\n\r\n    this.rootStore = rootStore\r\n\r\n    socket.on('chat:received message', (data) => {\r\n      this.addMessage(data)\r\n    })\r\n  }\r\n\r\n  sendMessage (text) {\r\n    socket.emit('chat:send message', {\r\n      sender: this.rootStore.userStore.user.name,\r\n      message: text\r\n    }, (res) => {\r\n      let response = JSON.parse(res)\r\n      console.log('[socket:emit:chat:send message]', response)\r\n    })\r\n  }\r\n\r\n  addMessage (data) {\r\n    this.messages.push(data)\r\n  }\r\n\r\n  clearMessages () {\r\n    this.messages = []\r\n  }\r\n}","import { routeStore } from '../history'\r\nimport GameStore from './gameStore'\r\nimport UserStore from './userStore'\r\nimport ChatStore from './chatStore'\r\n\r\nclass RootStore {\r\n  constructor () {\r\n    this.gameStore = new GameStore(this)\r\n    this.userStore = new UserStore(this)\r\n    this.chatStore = new ChatStore(this)\r\n\r\n    this.routeStore = routeStore\r\n  }\r\n}\r\n\r\nconst rootStore = new RootStore()\r\n\r\nexport const gameStore = rootStore.gameStore\r\nexport const userStore = rootStore.userStore\r\nexport const chatStore = rootStore.chatStore\r\n\r\nexport default rootStore","import React from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\n\r\nconst Header = observer((props) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__left\">{props.left}</div>\r\n      <div className=\"header__title\">{props.title}</div>\r\n      <div className=\"header__right\">{props.right}</div>\r\n    </header>\r\n  )\r\n})\r\n\r\nexport default Header","import { observer } from 'mobx-react-lite'\r\nimport React, { useState } from 'react'\r\n\r\nimport { gameStore } from '../../store'\r\n\r\nconst FormCreateRoom = observer(() => {\r\n  const [value, setValue] = useState('')\r\n\r\n  let handleSubmit = (event) => {\r\n    gameStore.createRoom(value)\r\n    setValue('')\r\n    event.preventDefault()\r\n  }\r\n  let handleChange = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <form className=\"form-create-room\" onSubmit={handleSubmit}>\r\n      <div className=\"input\">\r\n        <div className=\"input-label\">Название комнаты</div>\r\n        <input className=\"input-native\" type=\"text\" placeholder=\"Введите название\" value={value} onChange={handleChange} />\r\n      </div>\r\n      <button className=\"button button--primary\" type=\"submit\">Создать комнату</button>\r\n    </form>\r\n  )\r\n})\r\n\r\nexport default FormCreateRoom","import React from 'react'\r\nimport { observer } from \"mobx-react-lite\"\r\n\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { gameStore, userStore } from '../../store'\r\n\r\nimport Header from '../layout/Header'\r\nimport FormCreateRoom from '../forms/FormCreateRoom'\r\n\r\nconst HomePage = observer(() => {\r\n\r\n  let getStatus = (room) => {\r\n    if (room.finished) return 'закончилась'\r\n    else if (room.started) return 'началась'\r\n    else if (room.filled) return 'заполнена'\r\n    else return 'ожидает игроков'\r\n  }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <Header\r\n        title=\"Dice Poker\"\r\n        right={<Link to=\"/profile\" className=\"button button--flat\">Профиль: {userStore.user.name}</Link>} />\r\n\r\n      <main className=\"main\">\r\n        <FormCreateRoom createRoom={gameStore.createRoom} />\r\n        {\r\n          gameStore.rooms.length > 0 && <div className=\"block\">\r\n            <div className=\"room-list\">\r\n              {\r\n                gameStore.rooms.map(v => (\r\n                  <div className=\"room-list-item\" key={v.id} onClick={() => gameStore.joinRoom(v.id)}>\r\n                    <div className=\"room-list-item__meta\">Название: <b>{v.name}</b></div>\r\n                    <div className=\"room-list-item__meta\">Игроков: <b>{v.users.length}/{v.maxUsers}</b></div>\r\n                    <div className=\"room-list-item__meta\">Статус: <b>{getStatus(v)}</b></div>\r\n                  </div>\r\n                ))\r\n              }\r\n            </div>\r\n          </div>\r\n        }\r\n      </main>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default HomePage","import React from 'react'\r\n\r\nimport dice_1 from '../../assets/img/dice_1.svg'\r\nimport dice_2 from '../../assets/img/dice_2.svg'\r\nimport dice_3 from '../../assets/img/dice_3.svg'\r\nimport dice_4 from '../../assets/img/dice_4.svg'\r\nimport dice_5 from '../../assets/img/dice_5.svg'\r\nimport dice_6 from '../../assets/img/dice_6.svg'\r\n\r\nconst IMGS = {\r\n  dice_1,\r\n  dice_2,\r\n  dice_3,\r\n  dice_4,\r\n  dice_5,\r\n  dice_6\r\n}\r\n\r\nfunction Dice (props) {\r\n  return (\r\n    <button className={'dice' + (props.selected ? ' selected' : '') + (props.selectable ? ' selectable' : '')} onClick={props.onClick} disabled={!props.selectable}>\r\n      <img src={IMGS[`dice_${props.value}`]} />\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Dice","import React from 'react'\r\n\r\nfunction ClickableCell (props) {\r\n  return (\r\n    <button className={'clickable-cell' + (props.highlight ? ' is-highlight' : '')} disabled={props.disabled} onClick={props.onClick}>{ props.children }</button>\r\n  )\r\n}\r\n\r\nexport default ClickableCell","export const TABLE_FIELDS = [\r\n  {\r\n    name: 'school_1',\r\n    ru: '1'\r\n  },\r\n  {\r\n    name: 'school_2',\r\n    ru: '2'\r\n  },\r\n  {\r\n    name: 'school_3',\r\n    ru: '3'\r\n  },\r\n  {\r\n    name: 'school_4',\r\n    ru: '4'\r\n  },\r\n  {\r\n    name: 'school_5',\r\n    ru: '5'\r\n  },\r\n  {\r\n    name: 'school_6',\r\n    ru: '6'\r\n  },\r\n  {\r\n    name: 'school_sum',\r\n    ru: '∑'\r\n  },\r\n  {\r\n    name: 'one_pair',\r\n    ru: '2'\r\n  },\r\n  {\r\n    name: 'set',\r\n    ru: '3'\r\n  },\r\n  {\r\n    name: 'two_pairs',\r\n    ru: '2+2'\r\n  },\r\n  {\r\n    name: 'full_house',\r\n    ru: '3+2'\r\n  },\r\n  {\r\n    name: 'small_straight',\r\n    ru: 'М.С.'\r\n  },\r\n  {\r\n    name: 'big_straight',\r\n    ru: 'Б.С.'\r\n  },\r\n  {\r\n    name: 'quads',\r\n    ru: 'Каре'\r\n  },\r\n  {\r\n    name: 'poker',\r\n    ru: 'Покер'\r\n  },\r\n  {\r\n    name: 'sum',\r\n    ru: '∑ общ'\r\n  },\r\n  {\r\n    name: 'total',\r\n    ru: 'Итог'\r\n  }\r\n]","import React from 'react'\r\nimport { observer } from \"mobx-react-lite\"\r\n\r\nimport ClickableCell from './ClickableCell'\r\n\r\nimport { TABLE_FIELDS } from '../../data/constants'\r\n\r\nimport { gameStore } from '../../store'\r\n\r\nconst Table = observer(() => {\r\n  console.log(gameStore.allCombos)\r\n  return (\r\n    <div className=\"game-table\">\r\n      <div className=\"col\">\r\n        <div className=\"cell\"></div>\r\n        {\r\n          TABLE_FIELDS.map(v => (\r\n            <div className=\"cell bold\" key={v.name}>{ v.ru }</div>\r\n          ))\r\n        }\r\n      </div>\r\n      {\r\n        gameStore.tableData.map(tableColumn => {\r\n          let isPlayingColumn = gameStore.currentUser.name == tableColumn.userName\r\n          return (\r\n            <div className=\"col\" key={tableColumn.userName}>\r\n              <div className=\"cell bold\">{tableColumn.userName.slice(0, 2)}</div>\r\n              {\r\n                TABLE_FIELDS.map(v => {\r\n                  let highlight = gameStore.isMyShot && isPlayingColumn && tableColumn.table.points[v.name] === null && gameStore.allCombos[v.name] !== undefined\r\n                  let disabled = !gameStore.isMyShot || !isPlayingColumn || v.name == 'school_sum' || v.name == 'total' || tableColumn.table.points[v.name] !== null\r\n                  let value = ''\r\n                  if (isPlayingColumn) {\r\n                    if (tableColumn.table.points[v.name] !== null) value = tableColumn.table.points[v.name]\r\n                    else if (gameStore.allCombos[v.name] !== null) value = gameStore.allCombos[v.name]\r\n                  } else {\r\n                    if (tableColumn.table.points[v.name] !== null) value = tableColumn.table.points[v.name]\r\n                  }\r\n                  // console.log('cell:', isPlayingColumn, gameStore.isMyShot, disabled, value);\r\n                  return (\r\n                    <ClickableCell\r\n                      key={v.name}\r\n                      highlight={highlight}\r\n                      disabled={disabled}\r\n                      onClick={() => { gameStore.putPoint(v.name) }}>\r\n                        { value }\r\n                    </ClickableCell>\r\n                  )\r\n                })\r\n              }\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Table","import React from 'react'\r\n\r\nfunction ChatMessage (props) {\r\n  return (\r\n    <div className=\"chat-message\">\r\n      <span className=\"chat-message__sender\">{ props.sender }:</span>\r\n      <span className=\"chat-message__text\"> { props.message }</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatMessage","import { observer } from 'mobx-react-lite'\r\nimport React, { useState } from 'react'\r\n\r\nimport { chatStore } from '../../store'\r\n\r\nconst FormChatInputMessage = observer(() => {\r\n  const [value, setValue] = useState('')\r\n\r\n  let handleSubmit = (event) => {\r\n    chatStore.sendMessage(value)\r\n    setValue('')\r\n    event.preventDefault()\r\n  }\r\n  let handleChange = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <div className=\"input\">\r\n        <input className=\"input-native\" type=\"text\" placeholder=\"Введите сообщение\" value={value} onChange={handleChange} />\r\n      </div>\r\n      {/* <button className=\"button button--primary\" type=\"submit\">Отправить</button> */}\r\n    </form>\r\n  )\r\n})\r\n\r\nexport default FormChatInputMessage","import React from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\n\r\nimport { chatStore } from '../../store'\r\nimport ChatMessage from './ChatMessage'\r\nimport FormChatInputMessage from './FormChatInputMessage'\r\n\r\nconst Chat = observer(() => {\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-messages-wrap\">\r\n        {\r\n          chatStore.messages.map(v => (\r\n            <ChatMessage key={v.id} sender={v.sender} message={v.message} />\r\n          ))\r\n        }\r\n      </div>\r\n      <div className=\"chat-input-wrap\">\r\n        <FormChatInputMessage />\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Chat","import React from 'react'\r\nimport { observer } from \"mobx-react-lite\"\r\n\r\nimport { gameStore, userStore } from '../../store'\r\n\r\nimport Header from '../layout/Header'\r\nimport Dice from '../dice/Dice'\r\nimport Table from '../game-table/Table'\r\nimport Chat from '../chat/Chat'\r\n\r\nconst RoomPage = observer(() => {\r\n  return gameStore.roomData && (\r\n    <div className=\"page\">\r\n      <Header\r\n        left={<button className=\"button button--flat\" onClick={() => gameStore.leaveRoom()}>Покинуть комнату</button>}\r\n        title=\"Игра\"\r\n        right={userStore.user.name} />\r\n\r\n      <main className=\"main\">\r\n        <div className=\"room-info-container\">\r\n          <div className=\"list\">\r\n            <div className=\"item\">\r\n              <span>Название комнаты: <b>{gameStore.roomData.name}</b></span>\r\n            </div>\r\n            <div className=\"item\">\r\n              <span>Игроки ({gameStore.roomData.users.length}): <b>{\r\n                gameStore.roomData.users.map((v, i) => (\r\n                  <span key={v.id}>{v.name + (i < gameStore.roomData.users.length - 1 ? ', ' : '')}</span>\r\n                ))\r\n              }</b></span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {\r\n          !gameStore.roomData.started\r\n          ? <button className=\"button button--primary button--block\" onClick={() => gameStore.startGame()}>Начать игру</button>\r\n          : <div className=\"game-container\">\r\n            <div className=\"board-container\">\r\n              <div className=\"board-container__wrap\">\r\n                {\r\n                  gameStore.roomData.finished\r\n                  ? <span className=\"board-container__text\">Игра окончена, победитель: <b className=\"c-primary\">{gameStore.roomData.users.find(v => v.id == gameStore.roomData.winnerUserId).name}</b></span>\r\n                  : gameStore.isMyShot\r\n                  ? <span className=\"board-container__text c-primary\">Ваш ход</span>\r\n                  : <span className=\"board-container__text\">Бросает {gameStore.currentUser ? <b>{gameStore.currentUser.name}</b> : ''}</span>\r\n                }\r\n              </div>\r\n            </div>\r\n            {\r\n              !gameStore.roomData.finished && <div className=\"shot-container\">\r\n                <div className=\"shot-title\">Бросок: <b>{gameStore.serial}</b></div>\r\n                {\r\n                  gameStore.isMyShot && <button className=\"button button--flat\" onClick={() => gameStore.makeShot()} disabled={gameStore.serial === 3}>{\r\n                    !gameStore.shotData || gameStore.shotData.filter(v => v.selected).length > 0 ? 'Сделать бросок' : 'Перебросить всё'\r\n                  }</button>\r\n                }\r\n              </div>\r\n            }\r\n            {\r\n              gameStore.hasData && !gameStore.roomData.finished && <div className=\"dice-container\">\r\n                <div className=\"dice-container__title\">Бросок</div>\r\n                <div className=\"dice-container__block\">\r\n                  {\r\n                    gameStore.shotData.filter(v => !v.selected).map(v => (\r\n                      <Dice key={v.index} value={v.value} selectable={gameStore.isMyShot && gameStore.serial !== 3} onClick={() => gameStore.toggleHoldDice(v.index)} />\r\n                    ))\r\n                  }\r\n                </div>\r\n                <div className=\"dice-container__title\">Переброс</div>\r\n                <div className=\"dice-container__block\">\r\n                  {\r\n                    gameStore.shotData.filter(v => v.selected).map(v => (\r\n                      <Dice key={v.index} value={v.value} selectable={gameStore.isMyShot && gameStore.serial !== 3} onClick={() => gameStore.toggleHoldDice(v.index)} />\r\n                    ))\r\n                  }\r\n                </div>\r\n              </div>\r\n            }\r\n            { gameStore.tableData && <Table /> }\r\n            <Chat />\r\n          </div>\r\n        }\r\n      </main>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default RoomPage","import React from 'react'\r\nimport { observer } from \"mobx-react-lite\"\r\n\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport Header from '../layout/Header'\r\n\r\nconst ProfilePage = observer(() => {\r\n  return (\r\n    <div className=\"page\">\r\n      <Header\r\n        left={<Link to=\"/\" exact className=\"button button--flat\">Назад</Link>}\r\n        title=\"Профиль\" />\r\n      \r\n      <main className=\"main\">\r\n        \r\n      </main>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default ProfilePage","import React from 'react'\r\nimport { observer } from \"mobx-react-lite\"\r\n\r\nconst NotFoundPage = observer(() => \r\n  (\r\n    <div className=\"page\">\r\n      <header className=\"header\"></header>\r\n      <main className=\"main\">\r\n        Страница не найдена\r\n      </main>\r\n    </div>\r\n  )\r\n)\r\n\r\nexport default NotFoundPage","// import { hot } from 'react-hot-loader/root'\r\nimport React from 'react'\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport history from '../history'\r\n\r\nimport HomePage from './pages/HomePage'\r\nimport RoomPage from './pages/RoomPage'\r\nimport ProfilePage from './pages/ProfilePage'\r\nimport NotFoundPage from './pages/NotFoundPage'\r\n\r\nconst App = observer(() => {\r\n  return (\r\n    <Router history={history} >\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <HomePage />\r\n        </Route>\r\n\r\n        <Route path=\"/profile\">\r\n          <ProfilePage />\r\n        </Route>\r\n\r\n        <Route path=\"/room/:id\">\r\n          <RoomPage />\r\n        </Route>\r\n\r\n        <Route path=\"*\">\r\n          <NotFoundPage />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n})\r\n\r\nexport default App","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport App from './components/App'\r\nimport store from './store'\r\nimport './services/socket'\r\n\r\nimport './scss/index.scss'\r\n\r\nrender(<App store={store} />, document.getElementById('root'))"],"sourceRoot":""}